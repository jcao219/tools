open Core.Std
open Process_util
open Filepath_util

(** [run file args] run the executable generated by [cs3110 compile file] *)
let run (main_module : string) (args : string list) : int =
  let main      = strip_suffix main_module in
  let build_dir = "_build" in (* TODO abstract with config-file *)
  let cmd       = Format.sprintf "%s/%s.d.byte" build_dir main in
  let ()        = assert_file_exists cmd in
  run_process cmd args

let command =
  Command.basic
    ~summary:"Runs a compiled executable."
    ~readme:(fun () -> String.concat ~sep:"\n" [
      "The run command runs a compiled executable.";
      "Compile with the compile command, then run."
    ])
    Command.Spec.(
      empty
      +> flag ~aliases:["-r"] "-recompile" no_arg ~doc:" Compile target before running"
      +> anon ("target" %: file)
      +> anon (sequence ("args" %: string))
    )
    (fun recompile main args () ->
      (* let () = if recompile then Command.compile main in *)
      check_code (run main args)
    )
